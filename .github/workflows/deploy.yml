name: Deploy to GitHub Pages

on:
  push:
    branches:
      - main

env:
  PROJECT_ID: mercer-chatbots
  REGION: europe-west1
  SERVICE_NAME: github-gallery

jobs:
  build:
    runs-on: ubuntu-latest
    environment:
      name: github-pages
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '18'
      - name: Install dependencies
        run: npm install
      - name: Build
        env:
          PUBLIC_URL: https://grentlich.github.io/github-gallery
          REACT_APP_GITHUB_TOKEN: ${{ secrets.REACT_APP_GITHUB_TOKEN }}
        run: |
          echo "REACT_APP_GITHUB_TOKEN=${{ secrets.REACT_APP_GITHUB_TOKEN }}" > .env
          echo "PUBLIC_URL=$PUBLIC_URL" >> .env
          npm run build
      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: build

  deploy:
    name: Deploy to Cloud Run

    on:
      push:
        branches:
          - main

    env:
      PROJECT_ID: your-project-id
      REGION: europe-west1
      SERVICE_NAME: github-gallery

    jobs:
      deploy:
        runs-on: ubuntu-latest
        steps:
          - uses: actions/checkout@v3

          - name: Set up Cloud SDK
            uses: google-github-actions/setup-gcloud@v1
            with:
              project_id: ${{ env.PROJECT_ID }}
              service_account_key: ${{ secrets.GCP_SA_KEY }}

          - name: Authenticate Docker
            run: gcloud auth configure-docker

          - name: Build and Push Image
            run: |
              docker build -t gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE_NAME }}:${{ github.sha }} .
              docker push gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE_NAME }}:${{ github.sha }}

          - name: Deploy to Cloud Run
            run: |
              gcloud run deploy ${{ env.SERVICE_NAME }} \
                --image gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE_NAME }}:${{ github.sha }} \
                --region ${{ env.REGION }} \
                --platform managed \
                --allow-unauthenticated \
                --set-env-vars "REACT_APP_GITHUB_TOKEN=${{ secrets.REACT_APP_GITHUB_TOKEN }}"